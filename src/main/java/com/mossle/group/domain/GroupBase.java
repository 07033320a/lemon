package com.mossle.group.domain;

// Generated by Hibernate Tools
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * GroupBase .
 * 
 * @author Lingo
 */
@Entity
@Table(name = "GROUP_BASE")
public class GroupBase implements java.io.Serializable {
    private static final long serialVersionUID = 0L;

    /** null. */
    private Long id;

    /** null. */
    private GroupType groupType;

    /** null. */
    private String code;

    /** null. */
    private String abbr;

    /** null. */
    private String name;

    /** null. */
    private String descn;

    /** null. */
    private Integer status;

    /** null. */
    private String reference;

    /** null. */
    private String userRepoRef;

    /** null. */
    private String scopeId;

    /** . */
    private Set<GroupInfo> groupInfos = new HashSet<GroupInfo>(0);

    public GroupBase() {
    }

    public GroupBase(GroupType groupType, String code, String abbr,
            String name, String descn, Integer status, String reference,
            String userRepoRef, String scopeId, Set<GroupInfo> groupInfos) {
        this.groupType = groupType;
        this.code = code;
        this.abbr = abbr;
        this.name = name;
        this.descn = descn;
        this.status = status;
        this.reference = reference;
        this.userRepoRef = userRepoRef;
        this.scopeId = scopeId;
        this.groupInfos = groupInfos;
    }

    /** @return null. */
    @Id
    @GeneratedValue
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    /**
     * @param id
     *            null.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /** @return null. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "GROUP_TYPE_ID")
    public GroupType getGroupType() {
        return this.groupType;
    }

    /**
     * @param groupType
     *            null.
     */
    public void setGroupType(GroupType groupType) {
        this.groupType = groupType;
    }

    /** @return null. */
    @Column(name = "CODE", length = 50)
    public String getCode() {
        return this.code;
    }

    /**
     * @param code
     *            null.
     */
    public void setCode(String code) {
        this.code = code;
    }

    /** @return null. */
    @Column(name = "ABBR", length = 50)
    public String getAbbr() {
        return this.abbr;
    }

    /**
     * @param abbr
     *            null.
     */
    public void setAbbr(String abbr) {
        this.abbr = abbr;
    }

    /** @return null. */
    @Column(name = "NAME", length = 200)
    public String getName() {
        return this.name;
    }

    /**
     * @param name
     *            null.
     */
    public void setName(String name) {
        this.name = name;
    }

    /** @return null. */
    @Column(name = "DESCN", length = 200)
    public String getDescn() {
        return this.descn;
    }

    /**
     * @param descn
     *            null.
     */
    public void setDescn(String descn) {
        this.descn = descn;
    }

    /** @return null. */
    @Column(name = "STATUS")
    public Integer getStatus() {
        return this.status;
    }

    /**
     * @param status
     *            null.
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /** @return null. */
    @Column(name = "REFERENCE", length = 200)
    public String getReference() {
        return this.reference;
    }

    /**
     * @param reference
     *            null.
     */
    public void setReference(String reference) {
        this.reference = reference;
    }

    /** @return null. */
    @Column(name = "USER_REPO_REF", length = 50)
    public String getUserRepoRef() {
        return this.userRepoRef;
    }

    /**
     * @param userRepoRef
     *            null.
     */
    public void setUserRepoRef(String userRepoRef) {
        this.userRepoRef = userRepoRef;
    }

    /** @return null. */
    @Column(name = "SCOPE_ID", length = 50)
    public String getScopeId() {
        return this.scopeId;
    }

    /**
     * @param scopeId
     *            null.
     */
    public void setScopeId(String scopeId) {
        this.scopeId = scopeId;
    }

    /** @return . */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "groupBase")
    public Set<GroupInfo> getGroupInfos() {
        return this.groupInfos;
    }

    /**
     * @param groupInfos
     *            .
     */
    public void setGroupInfos(Set<GroupInfo> groupInfos) {
        this.groupInfos = groupInfos;
    }
}
